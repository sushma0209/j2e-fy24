PROGRAM 1

import java.util.*;
public class p1 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        int e = sc.nextInt();
        System.out.println(max_candies(a, e));
    }

    public static List<Boolean> max_candies(int[] a, int e) {
        int maxCandy = 0;
        for (int candy : a) {
            if (candy > maxCandy) {
                maxCandy = candy;
            }
        }
        List<Boolean> result = new ArrayList<>();
        for (int currentCandy : a) {
            if (currentCandy + e >= maxCandy) {
                result.add(true);
            } else {
                result.add(false);
            }
        }
        return result;
    }
}



PROGRAM 2

import java.util.*;
public class p2 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        System.out.println(maxArea(a));
    }

    public static int maxArea(int[] a) {
        int n = a.length;
        int left = 0, right = n - 1;
        int max_area = 0;
        while (left < right) {
            int area = Math.min(a[left], a[right]) * (right - left);
            max_area = Math.max(max_area, area);
            if (a[left] < a[right]) {
                left++;
            } else {
                right--;
            }
        }
        return max_area;
    }
}



PROGRAM 3

import java.util.*;
class p3 {
    public static int res(int[] a, int t) {
        int n = a.length;
        int m = Integer.MAX_VALUE;
        Arrays.sort(a);
        int s = 0;
        for (int i = 0; i < n; i++) {
            int j = i + 1;
            int k = n - 1;
            while (j < k) {
                s = a[i] + a[j] + a[k];
                if (Math.abs(s - t) < Math.abs(t - m)) {
                    m = s;
                } else if (s < t) {
                    j++;
                } else {
                    k--;
                }
            }
        }
        return m;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int a[] = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        int t = sc.nextInt();
        System.out.println(res(a, t));
    }
}



PROGRAM 4

import java.util.*;
public class p4 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        nextPermutation(a);
    }

    public static void nextPermutation(int[] nums) {
        int n = nums.length;
        int idx = -1;
        for (int i = n - 2; i >= 0; i--) {
            if (nums[i] < nums[i + 1]) {
                idx = i;
                break;
            }
        }
        if (idx == -1) {
            Arrays.sort(nums, 0, n);
            return;
        }
        for (int i = n - 1; i > idx; i--) {
            if (nums[i] > nums[idx]) {
                int temp = nums[i];
                nums[i] = nums[idx];
                nums[idx] = temp;
                break;
            }
        }
        Arrays.sort(nums, idx + 1, n);
    }
}



PROGRAM 5

import java.util.*;
public class p5 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int a[] = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        int t = sc.nextInt();
        System.out.println(res(a, t));
    }

    public static int res(int[] a, int t) {
        int n = a.length;
        int l = 0, h = n - 1;
        while (l <= h) {
            int m = (l + h) / 2;
            if (a[m] == t) {
                return m;
            }
            if (a[l] <= a[m]) {
                if (a[l] <= t && a[m] >= t) {
                    h = m - 1;
                } else {
                    l = m + 1;
                }
            } else {
                if (a[h] >= t && a[m] <= t) {
                    l = m + 1;
                } else {
                    h = m - 1;
                }
            }
        }
        return -1;
    }
}



PROGRAM 6

import java.util.*;
public class p6 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        System.out.println(permute(a));
    }

    public static List<List<Integer>> permute(int[] nums) {
        Set<List<Integer>> ans = new HashSet();
        helper(nums, 0, ans);
        return new ArrayList(ans);
    }

    public static void helper(int[] nums, int index, Set<List<Integer>> ans) {
        if (index == nums.length) {
            ArrayList<Integer> list = new ArrayList<>();
            for (int i = 0; i < nums.length; i++) {
                list.add(nums[i]);
            }
            ans.add(list);
            return;
        }

        for (int i = index; i < nums.length; i++) {
            swap(i, index, nums);
            helper(nums, index + 1, ans);
            swap(i, index, nums);
        }
    }

    public static void swap(int i, int j, int[] nums) {
        int t = nums[i];
        nums[i] = nums[j];
        nums[j] = t;
    }
}



PROGRAM 7

import java.util.*;
public class p7 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        System.out.println(largest_sum(a));
    }

    public static int largest_sum(int[] a) {
        int n = a.length;
        int[] dp = new int[n + 1];
        dp[0] = a[0];
        int max = dp[0];
        for (int i = 1; i < n; i++) {
            dp[i] = a[i] + (dp[i - 1] > 0 ? dp[i - 1] : 0);
            max = Math.max(max, dp[i]);
        }
        return max;
    }
}



PROGRAM 8

import java.util.*;
public class p8 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] a = new int[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                a[i][j] = sc.nextInt();
            }
        }
        System.out.println(merge(a));
    }

    public static int[][] merge(int[][] s) {
        List<int[]> r = new ArrayList<>();
        Arrays.sort(s, (a, b) -> a[0] - b[0]);
        if (s.length == 0) {
            return r.toArray(new int[0][]);
        }
        int[] temp = s[0];
        for (int i = 0; i < s.length; i++) {
            if (s[i][0] <= temp[1]) {
                temp[1] = Math.max(temp[1], s[i][1]);
            } else {
                r.add(temp);
                temp = s[i];
            }
        }
        r.add(temp);
        return r.toArray(new int[0][]);
    }
}



PROGRAM 9

import java.util.*;
public class p9 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        System.out.println(Arrays.toString(sort(a)));
    }

    public static int[] sort(int[] a) {
        int n = a.length;
        for (int i = 0; i < n; i++) {
            for (int j = i; j < n; j++) {
                if (a[i] > a[j]) {
                    int t = a[i];
                    a[i] = a[j];
                    a[j] = t;
                }
            }
        }
        return a;
    }
}



PROGRAM 10

import java.util.*;
public class p10 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        System.out.println(profit(a));
    }

    public static int profit(int[] a) {
        int n = a.length;
        int s = 0;
        if (a.length <= 1) {
            return 0;
        }
        for (int i = 0; i < n; i++) {
            if (a[i - 1] < a[i]) {
                s += (a[i] - a[i - 1]);
            }
        }
        return s;
    }
}



PROGRAM 11

import java.util.*;
public class p11 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        System.out.println(peek(a));
    }

    public static int peek(int[] a) {
        int n = a.length;
        int max = 0;
        for (int i = 0; i < n; i++) {
            for (int j = i; j < n; j++) {
                if (a[i] > a[j]) {
                    max = i;
                }
            }
        }
        return max;
    }
}




PROGRAM 12

import java.util.*;
public class p12 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a1 = new int[n];
        for (int i = 0; i < n; i++) {
            a1[i] = sc.nextInt();
        }
        int m = sc.nextInt();
        int[] a2 = new int[m];
        for (int i = 0; i < m; i++) {
            a2[i] = sc.nextInt();
        }
        System.out.println(median(a1, a2));
    }

    public static float median(int[] a1, int[] a2) {
        int n1 = a1.length;
        int n2 = a2.length;
        int[] r = new int[n1 + n2];
        for (int i = 0; i < n1; i++) {
            r[i] = a1[i];
        }
        int j = 0;
        while (j < n2) {
            for (int i = n1; i < n1 + n2; i++) {
                r[i] = a2[j];
                j++;
            }
        }
        Arrays.sort(r);
        int l = r.length;
        float t = 0;
        if (l % 2 == 0) {
            t = (r[(l / 2) - 1] + r[l / 2]) / 2;
        } else {
            t = r[(l / 2)];
        }
        return t;
    }
}



PROGRAM 13

import java.util.*;
public class p13 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        System.out.println(max_height(a));
    }

    public static int max_height(int[] a) {
        int left = 0;
        int right = a.length - 1;
        int max = 0;
        while (left < right) {
            int w = right - left;
            int h = Math.min(a[left], a[right]);
            int area = h * w;
            max = Math.max(max, area);
            if (a[left] < a[right])
                left++;
            else if (a[left] > a[right])
                right--;
            else {
                left++;
                right--;
            }
        }
        return max;
    }
}



PROGRAM 14

import java.util.*;
public class p14 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        System.out.println(max_ones(a));
    }

    public static int max_ones(int[] a) {
        int n = a.length;
        int max = 0;
        for (int i = 0; i < n; i++) {
            int c = 0;
            for (int j = i + 1; j < n; j++) {
                if (a[i] == 1 && a[j] == 1) {
                    j++;
                    c++;
                }
            }
            max = Math.max(max, c);
        }
        return max;
    }
}



PROGRAM 15

import java.util.*;
public class p15 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        int k = sc.nextInt();
        System.out.println(k_largest(a, k));
    }

    public static int k_largest(int[] a, int k) {
        int n = a.length;
        Arrays.sort(a);
        return a[n - k];
    }
}